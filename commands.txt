Basic git commands:

git init ---- initialize local repo

git status

git add .

git commit -m "what did you change?"

git push -u origin master   # remember push to origin master next time, directly use git push

git pull origin master

# when local branch conflicts to remote one, used forced update
git push -f origin master

# squash commits to one final condensed commit
# to make git log concise and neat
# NOTICE! before rebase, you know make sure already did git push to make local and remote repo identical
git rebase -i HEAD~n   # here n is the number of commits required to squash
git rebase -i commit_num  # squash commits from head till including this number
# TIPs!! after git rebase, must do git push -f origin master to make local and remote repo identical
# must do this!!! Otherwise, you get "Your branch and origin/master" have diverged, and have 1 and 4 (number of
# your squashed commits) different commits each, ....


# link local repo to remote repo
git remote add origin remote_http_url
git remote -v

# create a new branch
git checkout -b newbranch  # -b means creating and copying from current branch, and switch to newbranch
git push --set-upstream origin newbranch  # after create a new branch, set up its upstream -- origin newbranch


# merge master branch to new branch, when other team members made new features
git merge master   # for locally, merge master to another branch  -- the branch you're current on
git pull origin master    # from remote master pull changes to local


# For forking an existing project and work on it, 
1. fork it to your own account/that_repo_name
2. git clone url_of_above_repo  ---- clone to local folder (repo)
3. git branch mylocal, work on this local branch
4. link to the upstream (original remote repo)
git remote add upstream url_thatrepo
git remote -v   # see your copied repo is origin, and that one is upstream
5. (mylocal) git push origin master
6. on Github, create pull request to merge GraceCS/mylocal to Comm/CommclassroomOP

git commit --amend   # change the commit message for the very last one commit

# don't know how to use git patch now, but I will soon
# git patch

# git checkout - it helps in checkout out version of file(s) from remote upstream or undo a local change
# eg: git checkout -- . -> undo all locale changes
# eg: git checkout upstream/master abc.txt -> checks out abc.txt on upstream master branch


# about the key operation in git rebase
# use :x to exit the edit window of rebase !!

git reset --hard commitID   # return the previous version

